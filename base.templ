package main

import (
	"fmt"
	"rustydoggobytes/planner/db"
)

templ Layout() {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta
				name="viewport"
				content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"
			/>
			<meta http-equiv="X-UA-Compatible" content="ie=edge"/>
			<title>Rusty Planner</title>
			<script src="/static/js/htmx.min.js"></script>
			<link rel="stylesheet" href="/static/css/bulma.min.css"/>
		</head>
		<body hx-boost="true">
			<div class="container is-fluid">
				<header>
					<nav class="navbar" role="navigation" aria-label="main navigation">
						<div class="navbar-brand">
							<h2 class="navbar-item">Rusty Planner</h2>
						</div>
					</nav>
				</header>
				<main>
					{ children... }
				</main>
				<footer class="footer has-text-centered">Rusty Doggo Bytes &copy; 2024</footer>
			</div>
		</body>
	</html>
}

templ mealInput(label string, inputName string, inputValue string) {
	<div class="cell field">
		<label class="label" for={ inputName }>{ label }</label>
		<div class="control">
			<input class="input" type="text" name={ inputName } id={ inputName } value={ inputValue }/>
		</div>
	</div>
}

templ MealPlanCardForm(mealPlan db.MealPlan, success bool, err error) {
	<form hx-post={ string(templ.URL(fmt.Sprintf("/meal-plan/%s", FormatDate(mealPlan.Date)))) } hx-target="this" hx-swap="outerHTML">
		<p class="title is-4">
			{ mealPlan.Date.Weekday().String() }
		</p>
		<p class="subtitle is-6">{ FormatMonthDay(mealPlan.Date) }</p>
		<input type="hidden" name="date" value={ FormatDate(mealPlan.Date) }/>
		<div class="grid">
			@mealInput("Breakfast", "breakfast", mealPlan.Breakfast)
			@mealInput("Snack 1", "snack1", mealPlan.Snack1)
			@mealInput("Lunch", "lunch", mealPlan.Lunch)
			@mealInput("Snack 2", "snack2", mealPlan.Snack2)
			@mealInput("Dinner", "dinner", mealPlan.Dinner)
			<div class="cell field">
				<label class="label">&nbsp;</label> <!-- Invisible label -->
				<button class="button is-primary">Save</button>
				if success {
					<p class="help is-success">Saved successfully</p>
				} else if err != nil {
					<p class="help is-danger">Failed. { fmt.Sprint(err) }</p>
				}
			</div>
		</div>
	</form>
}

templ Index(pageData PageData) {
	@Layout() {
		<div class=" fixed-grid has-4-cols">
			<div class="grid has-text-centered">
				<a href={ templ.URL(fmt.Sprintf("/?start-date=%s", FormatDate(pageData.PreviousWeek))) } class="cell button">Previous</a>
				<p class="cell is-col-span-2 title is-5">
					Week
					<br/>
					{ FormatMonthDay(pageData.WeekStart) } / { FormatMonthDay(pageData.WeekEnd) }
				</p>
				<a href={ templ.URL(fmt.Sprintf("/?start-date=%s", FormatDate(pageData.NextWeek))) } class="cell button">Next</a>
			</div>
		</div>
		for _, mealPlan := range pageData.Meals {
			<div class="content">
				<div class="box">
					@MealPlanCardForm(mealPlan, false, nil)
				</div>
			</div>
		}
	}
}

templ GroceryListItem(item db.GroceryItem) {
	<li class="box">
		<div class="level is-mobile">
			<div class="level-left">
				<div class="level-item">
					if !item.Completed {
						<span>{ item.Name }</span>
					} else {
						<s>{ item.Name }</s>
					}
				</div>
			</div>
			<div class="level-right">
				<div class="level-item">
					<button
						class="button is-small is-primary"
						hx-put={ string(templ.URL(fmt.Sprintf("/groceries/%d/toggle", item.ID))) }
						hx-target="closest li"
						hx-swap="outerHTML swap:500ms"
					>Complete</button>
				</div>
				<div class="level-item">
					<button
						class="button is-small is-danger delete-btn"
						hx-delete={ string(templ.URL(fmt.Sprintf("/groceries/%d", item.ID))) }
						hx-target="closest li"
						hx-swap="outerHTML swap:100ms"
					>Delete</button>
				</div>
			</div>
		</div>
	</li>
}

templ GroceryList(groceries []db.GroceryItem) {
	@Layout() {
		<section class="section">
			<div class="container">
				<h1 class="title">Groceries</h1>
				<form hx-post="/groceries" hx-target="#todo-list" hx-swap="beforeend">
					<div class="field has-addons">
						<div class="control is-expanded">
							<input class="input" type="text" name="name" id="grocery-input" placeholder="Add a new item"/>
						</div>
						<div class="control">
							<button class="button is-primary" hx-post="/groceries" hx-on::after-request="clearAndFocus(event)">Add</button>
						</div>
					</div>
				</form>
				<div class="mt-4">
					<ul id="todo-list">
						for _, item := range groceries {
							@GroceryListItem(item)
						}
					</ul>
				</div>
			</div>
		</section>
		<script type="text/javascript">
            const input = document.getElementById('grocery-input');
            document.addEventListener('DOMContentLoaded', function() {
                input.focus();
            });
            function clearAndFocus(event) {
                if (event.detail.successful) {
                  input.value = '';
                  input.focus();
                }
            }
        </script>
	}
}
